name: Build for ARMv5

on:
  push:
    tags: ['v*']
  pull_request:
  workflow_dispatch:  # 允许手动触发

jobs:
  build-armv5:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        go-version: [1.21.x]  # 根据项目需要调整 Go 版本
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Go
      uses: actions/setup-go@v4
      with:
        go-version: ${{ matrix.go-version }}

    - name: Set up QEMU for multi-arch build
      uses: docker/setup-qemu-action@v3

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Install ARMv5 cross-compiler
      run: |
        sudo apt-get update
        sudo apt-get install -y gcc-arm-linux-gnueabi g++-arm-linux-gnueabi

    - name: Build for ARMv5
      env:
        GOOS: linux
        GOARCH: arm
        GOARM: 5
        CC: arm-linux-gnueabi-gcc
        CXX: arm-linux-gnueabi-g++
      run: |
        # 如果是 Go 项目
        go build -v -o sun-panel-armv5 ./cmd/sun-panel
        # 或者根据项目结构调整构建路径
        # go build -v -o sun-panel-armv5 .

        # 如果是 C/C++ 项目，使用 make 或其他构建工具
        # make CC=arm-linux-gnueabi-gcc CXX=arm-linux-gnueabi-g++

    - name: Check binary architecture
      run: |
        file sun-panel-armv5
        readelf -h sun-panel-armv5 | grep -E '(Class|Machine|Flags)'

    - name: Upload artifact
      uses: actions/upload-artifact@v4
      with:
        name: sun-panel-armv5-binary
        path: sun-panel-armv5